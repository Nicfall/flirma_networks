#install.packages("remotes")
remotes::install_github("Russel88/MicEco")
install.packages("remotes")
remotes::install_github("Russel88/MicEco")
#install.packages("remotes")
#remotes::install_github("Russel88/MicEco")
library("MicEco")
samdf.trim <- data.frame(ps.trim@sam_data)
library('phyloseq')
library('ggplot2')
#install.packages("Rmisc")
library('Rmisc')
library(cowplot)
#BiocManager::install("ShortRead")
library(ShortRead)
BiocManager::install("ShortRead")
library('phyloseq')
library('ggplot2')
#install.packages("Rmisc")
library('Rmisc')
library(cowplot)
#BiocManager::install("ShortRead")
library(ShortRead)
#### Read in previously saved datafiles ####
setwd("/Volumes/GoogleDrive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table")
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table")
library('phyloseq')
library('ggplot2')
#install.packages("Rmisc")
library('Rmisc')
library(cowplot)
#BiocManager::install("ShortRead")
library(ShortRead)
#### Read in previously saved datafiles ####
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table")
samdf <- read.csv("fl_sample_info - 16s_all_newvars.csv")
row.names(samdf) <- samdf$sample_num
taxa <- readRDS("fl16s.23.taxid.newids.rds")
seq.newids <- readRDS("fl16s.23.seqtab.nochim.newids.rds")
#phyloseq object with new taxa ids
ps <- phyloseq(otu_table(seq.newids, taxa_are_rows=FALSE),
sample_data(samdf),
tax_table(taxa))
ps #12836
#### remove mitochondria, chloroplasts, non-bacteria ####
ps.mito <- subset_taxa(ps, (family=="Mitochondria"))
ps.mito #17 taxa to remove
ps.chlor <- subset_taxa(ps, (order=="Chloroplast"))
ps.chlor #541 taxa to remove
ps.notbact <- subset_taxa(ps, (domain!="Bacteria") | is.na(domain))
ps.notbact #23591 taxa to remove
ps.nomito <- subset_taxa(ps, (family!="Mitochondria") | is.na(family))
ps.nomito #75413 taxa
ps.nochlor <- subset_taxa(ps.nomito, (order!="Chloroplast") | is.na(order))
ps.nochlor #74872 taxa
ps.clean <- subset_taxa(ps.nochlor, (domain=="Bacteria"))
ps.clean #51281 taxa
#just archaea
ps.arch <- subset_taxa(ps.nomito, (domain=="Archaea"))
ps.arch #485 taxa
#BiocManager::install("decontam")
library(decontam)
df <- as.data.frame(sample_data(ps.clean)) # Put sample_data into a ggplot-friendly data.frame
df$LibrarySize <- sample_sums(ps.clean)
df <- df[order(df$LibrarySize),]
df$Index <- seq(nrow(df))
ggplot(data=df, aes(x=Index, y=LibrarySize, color=year)) + geom_point()
sample_data(ps.clean)$lib_size <- sample_sums(ps.clean)
sample_data(ps.clean)$is.neg <- sample_data(ps.clean)$full_site == "neg"
contamdf.prev <- isContaminant(ps.clean, neg="is.neg",threshold=0.5)
table(contamdf.prev$contaminant)
# Make phyloseq object of presence-absence in negative controls and true samples
ps.pa <- transform_sample_counts(ps.clean, function(abund) 1*(abund>0))
ps.pa.neg <- prune_samples(sample_data(ps.pa)$full_site == "neg", ps.pa)
ps.pa.pos <- prune_samples(sample_data(ps.pa)$full_site != "neg", ps.pa)
# Make data.frame of prevalence in positive and negative samples
df.pa <- data.frame(pa.pos=taxa_sums(ps.pa.pos), pa.neg=taxa_sums(ps.pa.neg),
contaminant=contamdf.prev$contaminant)
ggplot(data=df.pa, aes(x=pa.neg, y=pa.pos, color=contaminant)) + geom_point() +
xlab("Prevalence (Negative Controls)") + ylab("Prevalence (True Samples)")
#remove from ps.clean:
ps.clean1 <- prune_taxa(!contamdf.prev$contaminant,ps.clean)
#also remove negative controls, don't need them anymore I think
ps.cleaner <- subset_samples(ps.clean1,(full_site!="neg"))
ps.cleaner
seqtab.cleaner <- data.frame(ps.cleaner@otu_table)
sample_sums(ps.cleaner)
sum(sample_sums(ps.cleaner)_
sum(sample_sums(ps.cleaner))
table(sample_data(ps.cleaner)$site)
table(sample_data(ps.cleaner)$site_zone)
table(sample_data(ps.cleaner)$full_site)
View(seq.newids)
#remove from ps.clean:
ps.clean1 <- prune_taxa(!contamdf.prev$contaminant,ps.clean)
#also remove negative controls, don't need them anymore I think
ps.clean2 <- subset_samples(ps.clean1,(full_site!="neg"))
ps.clean2
#also remove some other sample types that I don't use
ps.cleaner <- subset_samples(ps.clean2,(site!="UK3"))
ps.cleaner
#also remove negative controls, don't need them anymore I think
ps.clean.noneg <- subset_samples(ps.clean1,(full_site!="neg"))
ps.clean.noneg
#also remove some other samples from a site that I don't use
ps.clean.nouk3 <- subset_samples(ps.clean.noneg,(site!="UK3"))
ps.clean.nouk3
#also remove singletons
ps.clean.nosing <- filter_taxa(ps.clean.nouk3, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.clean.nosing
#otu_table()   OTU Table:         [ 19948 taxa and 316 samples ]
sum(sample_sums(ps.clean.nosing))
ps.trim <- prune_taxa(taxa_sums(ps.clean.nosing) >= 112, ps.clean.nosing)
ps.trim #130 taxa
ps.trim <- prune_taxa(taxa_sums(ps.clean.nosing) >= 90, ps.clean.nosing)
ps.trim #130 taxa
ps.trim <- prune_taxa(taxa_sums(ps.clean.nosing) >= 112, ps.clean.nosing)
ps.trim #130 taxa
saveRDS(ps.trim,file="fl16s.23.ps.clean.trim.rds")
ps.clean.noneg
#phyloseq object with new taxa ids
ps1 <- phyloseq(otu_table(seq.newids, taxa_are_rows=FALSE),
sample_data(samdf),
tax_table(taxa))
ps1 #12836
##don't want UK3 samples for read count things
ps <- subset_samples(ps1,site!="UK3")
#phyloseq object with new taxa ids
ps.raw <- phyloseq(otu_table(seq.newids, taxa_are_rows=FALSE),
sample_data(samdf),
tax_table(taxa))
ps.raw
##don't want UK3 samples for read count things
ps.raw.nouk3 <- subset_samples(ps.raw,site!="UK3")
##don't want UK3 samples for read count things
ps.raw.nouk3 <- subset_samples(ps.raw,site!="UK3")
ps <- prune_taxa(taxa_sums(ps.raw.nouk3) > 0, ps.raw.nouk3)
ps
#### remove mitochondria, chloroplasts, non-bacteria ####
ps.mito <- subset_taxa(ps, (family=="Mitochondria"))
ps.mito #17 taxa to remove
ps.mito #15 taxa to remove
ps.chlor <- subset_taxa(ps, (order=="Chloroplast"))
ps.chlor #541 taxa to remove
ps.notbact <- subset_taxa(ps, (domain!="Bacteria") | is.na(domain))
ps.notbact #23591 taxa to remove
ps.nomito <- subset_taxa(ps, (family!="Mitochondria") | is.na(family))
ps.nomito #75413 taxa
ps.nomito #72095 taxa
ps.nochlor <- subset_taxa(ps.nomito, (order!="Chloroplast") | is.na(order))
ps.nochlor #74872 taxa
ps.clean <- subset_taxa(ps.nochlor, (domain=="Bacteria"))
ps.clean #51281 taxa
#just archaea
ps.arch <- subset_taxa(ps.nomito, (domain=="Archaea"))
ps.arch #485 taxa
#BiocManager::install("decontam")
library(decontam)
df <- as.data.frame(sample_data(ps.clean)) # Put sample_data into a ggplot-friendly data.frame
df$LibrarySize <- sample_sums(ps.clean)
df <- df[order(df$LibrarySize),]
df$Index <- seq(nrow(df))
ggplot(data=df, aes(x=Index, y=LibrarySize, color=year)) + geom_point()
sample_data(ps.clean)$lib_size <- sample_sums(ps.clean)
sample_data(ps.clean)$is.neg <- sample_data(ps.clean)$full_site == "neg"
contamdf.prev <- isContaminant(ps.clean, neg="is.neg",threshold=0.5)
table(contamdf.prev$contaminant)
# Make phyloseq object of presence-absence in negative controls and true samples
ps.pa <- transform_sample_counts(ps.clean, function(abund) 1*(abund>0))
# Make phyloseq object of presence-absence in negative controls and true samples
ps.pa <- transform_sample_counts(ps.clean, function(abund) 1*(abund>0))
ps.pa.neg <- prune_samples(sample_data(ps.pa)$full_site == "neg", ps.pa)
ps.pa.pos <- prune_samples(sample_data(ps.pa)$full_site != "neg", ps.pa)
# Make data.frame of prevalence in positive and negative samples
df.pa <- data.frame(pa.pos=taxa_sums(ps.pa.pos), pa.neg=taxa_sums(ps.pa.neg),
contaminant=contamdf.prev$contaminant)
ggplot(data=df.pa, aes(x=pa.neg, y=pa.pos, color=contaminant)) + geom_point() +
xlab("Prevalence (Negative Controls)") + ylab("Prevalence (True Samples)")
#remove from ps.clean:
ps.clean1 <- prune_taxa(!contamdf.prev$contaminant,ps.clean)
#also remove negative controls, don't need them anymore I think
ps.clean.noneg <- subset_samples(ps.clean1,(full_site!="neg"))
ps.clean.noneg
#also remove singletons
ps.clean.nosing <- filter_taxa(ps.clean.noneg, function (x) {sum(x > 0) > 1}, prune=TRUE)
ps.clean.nosing
#72110, 320 samples
sum(sample_sums(ps))
sum(sample_sums(ps.clean.nosing))
ps.trim <- prune_taxa(taxa_sums(ps.clean.nosing) >= 112, ps.clean.nosing)
ps.trim #7424 taxa and 316 samples
sum(sample_sums(ps.trim))
saveRDS(ps.trim,file="fl16s.23.ps.clean.trim.rds")
seqtab.cleaner <- data.frame(ps.trim@otu_table)
rarecurve(seqtab.cleaner,step=500,label=FALSE) #after removing contaminants
library("vegan")
seqtab.cleaner <- data.frame(ps.trim@otu_table)
rarecurve(seqtab.cleaner,step=500,label=FALSE) #after removing contaminants
total <- rowSums(seqtab.cleaner)
fewer <- subset(total, total <5500)
#18 samples to remove, that's ~95% of samples which seems good
fewer
seqtab.trim <- data.frame(ps.trim@otu_table)
#df.t <- data.frame(t(df))
seqtab.trim$lib_size <- rowSums(seqtab.trim)
View(seqtab.trim)
seqtab.trim2 <- seqtab.trim[order(seqtab.trim$lib_size),]
seqtab.trim2$Index <- seq(nrow(seqtab.trim2))
##all of them:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point()
##all of them:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point(color="year")
##all of them:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size,color=year))+
geom_point()
head(seqtab.trim2$lib_size)
tail(seqtab.trim2$lib_size) #jumps an order of magnitude from 500k to 1.2m
head(seqtab.trim2$lib_size,n=10)
head(seqtab.trim2$lib_size,n=20)
head(seqtab.trim2$lib_size,n=30)
head(seqtab.trim2$lib_size,n=40)
##lower ones:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point()+
xlim(0,20000)
##lower ones:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point()+
ylim(0,20000)
##lower ones:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point()+
xlim(0,100)
##lower ones:
ggplot(data=seqtab.trim2, aes(x=Index, y=lib_size))+
geom_point()+
xlim(0,100)+
ylim(0,20000)
head(seqtab.trim2$lib_size,n=55)
?prune_samples
ps.trimmer <- prune_samples(sample_sums(ps.trim)<12500,ps.trim)
table(sample_data(ps.trim)$site_zone)
table(sample_data(ps.trimmer)$site_zone)
ps.trimmer <- prune_samples(sample_sums(ps.trim)<12500,ps.trim,prune=T)
?prune_samples
ps.trimmer
ps.trimmer <- prune_samples(sample_sums(ps.trim)>12500,ps.trim)
table(sample_data(ps.trimmer)$site_zone)
table(sample_data(ps.trim)$year)
table(sample_data(ps.trimmer)$year)
tail(seqtab.trim2$lib_size) #doesn't actually jump magnitudes for a while
ps.trimmer <- prune_samples(sample_sums(ps.trim)>7958,ps.trim)
table(sample_data(ps.trimmer)$site_zone)
table(sample_data(ps.trimmer)$year)
hist(sample_data(ps.trimmer)$year)
fewer <- subset(total, total <7100)
head(seqtab.trim2$lib_size,n=17)
head(seqtab.trim2$lib_size,n=18)
head(seqtab.trim2$lib_size,n=19)
ps.trimmer <- prune_samples(sample_sums(ps.trim)>5000,ps.trim)
ps.trimmer
table(sample_data(ps.trim)$site_zone)
table(sample_data(ps.trim)$year)
ps.trimmer <- prune_samples(sample_sums(ps.trim)>5000,ps.trim)
ps.trimmer
table(sample_data(ps.trimmer)$site_zone)
table(sample_data(ps.trimmer)$year)
ps.trim.rare <- rarefy_even_depth(ps.trim,sample.size=5000,replace=FALSE)
ps.trim.rare
saveRDS(ps.trim.rare,"fl16s.23.ps.clean.trim.rare5k.rds")
ps.rare <- prune_taxa(taxa_sums(ps.trim.rare) > 0, ps.trim.rare)
ps.rare
ps.trimmer
ps.trim.rare
saveRDS(ps.trimmer,file="fl16s.23.ps.clean.trim.less.rds")
#ps.less <- readRDS("fl16s.23.ps.cleaner.less.rds")
sum(sample_sums(ps.trimmer))
mean(sample_sums(ps.trimmer))
#35456.26
sd(sample_sums(ps.trimmer))
ps.trimmer
taxa <- readRDS("fl16s.23.taxid.newids.rds")
taxa1 <- readRDS("fl16s.23.taxid.rds")
#remove from ps.clean:
ps.clean1 <- prune_taxa(!contamdf.prev$contaminant,ps.clean)
#also remove negative controls, don't need them anymore I think
ps.clean.noneg <- subset_samples(ps.clean1,(full_site!="neg"))
ps.clean.noneg
saveRDS(ps.clean.noneg,file="fl16s.23.ps.clean.noneg.rds")
library(cowplot)
library(ggplot2)
library(phyloseq)
library("Rmisc")
library(car)
library("dplyr")
#home
#work
setwd("~/Library/CloudStorage/GoogleDrive-nicfall@bu.edu/My Drive/Flirma/flirma_networks/fl_16s/02.diversity")
ps.clean <- readRDS("../01.generate_asv_table/fl16s.23.ps.clean.trim.less.rds")
samdf <- data.frame(ps.clean@sam_data)
table(samdf$site_zone)
df <- data.frame(estimate_richness(ps.clean, split=TRUE, measures=c("Shannon","InvSimpson","Observed")))
df$sample_num <- rownames(df)
df$sample_num <- sub("X","",df$sample_num)
rownames(df) <- df$sample_num
df.div <- merge(df,samdf,by="sample_num") #add sample data
View(df)
df <- data.frame(estimate_richness(ps.clean, split=TRUE, measures=c("Shannon","InvSimpson","Observed")))
View(df)
df$sample_num <- rownames(df)
df$sample_num <- sub("X","",df$sample_num)
rownames(df) <- df$sample_num
df.div <- merge(df,samdf,by="sample_num") #add sample data
#shannon diversity divided by species richness
##aka pielou's evenness
##can also do this function: microbiome::evenness()
df.div$even <- df.div$Shannon/(log(df.div$Observed))
write.csv(df.div,file="fl16s.23.df.diversity.trim.csv")
##reorder the time points
df.div$time <- factor(df.div$time, levels = c("Pre","Irma","Post"))
df.div$zone <- as.factor(df.div$zone)
#separate species
df.div.rad <- subset(df.div,spp=="srad")
df.div.sid <- subset(df.div,spp=="ssid")
table(df.div$site_zone)
df.div %>%
filter(spp=="ssid") %>%
summarise(sd.obs=sd(Observed), av.obs=mean(Observed))
df.div %>%
filter(spp=="srad") %>%
summarise(sd.obs=sd(Observed), av.obs=mean(Observed))
df.div$zone <- as.factor(df.div$zone)
df.div$time <- factor(df.div$time,levels=c("Pre","Irma","Post"))
#separate species
df.div.rad <- subset(df.div,spp=="srad")
df.div.sid <- subset(df.div,spp=="ssid")
ggplot(df.div,aes(x=spp,y=Shannon))+
geom_boxplot()
wilcox.test(Shannon~spp,data=df.div)
gg.sh.sids.yr <- ggplot(df.div.sid,aes(x=time,y=Shannon,fill=time,color=time,shape=zone))+
#facet_grid(site~zone)+
facet_grid(.~zone)+
geom_jitter(aes(alpha=zone),position = position_jitterdodge())+
#add color="black" here for outlines
geom_boxplot(outlier.shape=NA,color="black",aes(alpha=zone))+
ylab("Shannon diversity")+
xlab("Time point")+
#ylim(0,1.05)+
theme_bw()+
scale_color_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_fill_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_shape_manual(values=c(21,23),name="Reef zone")+
theme(plot.title=element_text(face = "italic"),axis.text.x=element_text(angle=45,vjust=1.1,hjust=1))+
ggtitle("S. siderea")+
scale_alpha_manual(values=c(0.45,0.75),name="Reef zone")+
guides(fill="none",color="none",alpha="none",shape="none")+
scale_x_discrete(labels=c("Pre","Disturb.","Post"))
gg.sh.sids.yr
gg.sh.sids.yr.site <- ggplot(df.div.sid,aes(x=time,y=Shannon,fill=time,color=time,shape=zone))+
facet_grid(site~zone)+
#facet_grid(.~zone)+
geom_jitter(aes(alpha=zone),position = position_jitterdodge())+
#add color="black" here for outlines
geom_boxplot(outlier.shape=NA,color="black",aes(alpha=zone))+
ylab("Shannon diversity")+
xlab("Time point")+
#ylim(0,1.05)+
theme_bw()+
scale_color_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_fill_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_shape_manual(values=c(21,23),name="Reef zone")+
theme(plot.title=element_text(face = "italic"),axis.text.x=element_text(angle=45,vjust=1.1,hjust=1))+
ggtitle("S. siderea")+
scale_alpha_manual(values=c(0.45,0.75),name="Reef zone")+
guides(fill="none",color="none",alpha="none",shape="none")+
scale_x_discrete(labels=c("Pre","Disturb.","Post"))
gg.sh.sids.yr.site
df.div.sid.se <- summarySE(data=df.div.sid,measurevar="Shannon",groupvars=c("time","site","zone"))
##trying to add site data for no reason
ggplot(df.div.sid,aes(x=time,y=Shannon,fill=time,color=time))+
#facet_grid(site~zone)+
facet_grid(.~zone)+
geom_jitter(aes(alpha=zone,shape=site),position=position_jitterdodge(0.4))+
#geom_errorbar(data=df.div.sid.se,aes(ymin=Shannon-sd,ymax=Shannon+sd),position=position_dodge(0.6),width=0.2)+
geom_point(data=df.div.sid.se,aes(x=time,y=Shannon,shape=site,alpha=zone),color="black",position=position_dodge(0.6),size=4)+
#geom_jitter(aes(alpha=zone),position = position_jitterdodge())+
#add color="black" here for outlines
#geom_boxplot(outlier.shape=NA,color="black",aes(alpha=zone))+
ylab("Shannon diversity")+
xlab("Time point")+
ylim(0,6.5)+
theme_bw()+
scale_color_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_fill_manual(values=c("#3B0F70","#FA7F53","#A8327D"))+
scale_shape_manual(values=c(7,4,8),name="Site")+
theme(plot.title=element_text(face = "italic"),axis.text.x=element_text(angle=45,vjust=1.1,hjust=1))+
ggtitle("S. siderea")+
geom_boxplot(aes(group=time),fill="white",alpha=0)+
scale_alpha_manual(values=c(0.45,0.75),name="Reef zone")+
guides(fill="none",color="none",alpha="none")+
scale_x_discrete(labels=c("Pre","Disturb.","Post"))
ggplot(df.div.sid,aes(x=time,y=Shannon,color=site))+
geom_boxplot()
ggplot(df.div.sid,aes(x=time,y=Shannon,color=site))+
geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point()+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point()+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point()+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge())+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge())+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge(width=0.1))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge(width=0.2))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),position=position_dodge())+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=site))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=year))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=time))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,group=time))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=time))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=time,shape=site))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=time,shape=site))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(site~zone)
ggplot(df.div.sid.se,aes(x=time,y=Shannon,color=time,shape=site))+
geom_point(position=position_dodge(width=0.4))+
geom_errorbar(aes(ymin=Shannon-se,ymax=Shannon+se),width=0.2,position=position_dodge(width=0.4))+
#geom_boxplot()+
facet_wrap(~zone)
