library(phyloseq)
install.packages(phyloseq)
BiocManager::install("phyloseq")
install.packages("BiocManager")
#install.packages("BiocManager")
BiocManager::install("phyloseq")
setwd("~/Downloads")
load("SILVA_SSU_r138_2019.RDATA")
load("SILVA_SSU_r138_2019.RData")
load("SILVA_SSU_r138_2019.RData")
seqtab.nochim <- readRDS("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/fl16s.seqtab.nochim.RDS")
seq50 <- seqtab.nochim[,1:50]
dna <- DNAStringSet(getSequences(seq50)) # Create a DNAStringSet from t$
library("dada2")
library("DECIPHER")
dna <- DNAStringSet(getSequences(seq50)) # Create a DNAStringSet from t$
BiocManager::install.packages("dada2")
BiocManager::install("dada2")
#BiocManager::install("dada2")
#BiocManager::install("DECIPHER")
library("dada2")
library("DECIPHER")
#BiocManager::install("dada2")
BiocManager::install("DECIPHER")
library("DECIPHER")
dna <- DNAStringSet(getSequences(seq50)) # Create a DNAStringSet from t$
ids <- IdTaxa(dna, trainingSet, strand="top", processors=NULL, verbose=T)
View(ids)
ranks <- c("domain", "phylum", "class", "order", "family", "genus", "species") $
# Convert the output object of class "Taxa" to a matrix analogous to the output$
taxid <- t(sapply(ids, function(x) {
m <- match(ranks, x$rank)
taxa <- x$taxon[m]
taxa[startsWith(taxa, "unclassified_")] <- NA
taxa
}))
ranks <- c("domain", "phylum", "class", "order", "family", "genus", "species") $
# Convert the output object of class "Taxa" to a matrix analogous to the output$
taxid <- t(sapply(ids, function(x) {
m <- match(ranks, x$rank)
taxa <- x$taxon[m]
taxa[startsWith(taxa, "unclassified_")] <- NA
taxa
}))
ranks <- c("domain", "phylum", "class", "order", "family", "genus", "species")
# Convert the output object of class "Taxa" to a matrix analogous to the output$
taxid <- t(sapply(ids, function(x) {
m <- match(ranks, x$rank)
taxa <- x$taxon[m]
taxa[startsWith(taxa, "unclassified_")] <- NA
taxa
}))
colnames(taxid) <- ranks; rownames(taxid) <- getSequences(seqtab.nochim)
colnames(taxid) <- ranks; rownames(taxid) <- getSequences(seq50)
View(taxid)
ids2 <- IdTaxa(dna, trainingSet, strand="both", processors=NULL, verbose=T)
library('phyloseq')
library('ggplot2')
library('Rmisc')
library(cowplot)
library(ShortRead)
#### Read in previously saved datafiles ####
setwd("/Volumes/GoogleDrive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table")
#samdf <- read.csv("fl_sample_info - 16s_all.csv")
samdf <- read.csv("fl_sample_info - 16s_all_newvars.csv")
row.names(samdf) <- samdf$sample_num
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/runthrough2023")
##new runthrough, untrimmed:
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/runthrough2023")
##new runthrough, untrimmed:
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/runthrough2023")
#samdf <- read.csv("fl_sample_info - 16s_all.csv")
samdf <- read.csv("../fl_sample_info - 16s_all_newvars.csv")
getwd()
#samdf <- read.csv("fl_sample_info - 16s_all.csv")
samdf <- read.csv("../fl_sample_info - 16s_all_newvars.csv")
library(readr)
fl_sample_info_16s_all_newvars <- read_csv("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/fl_sample_info - 16s_all_newvars.csv")
getwd()
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table")
##new runthrough, untrimmed:
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/runthrough2023")
##new runthrough, untrimmed:
setwd("~/nicfall@bu.edu - Google Drive/My Drive/Flirma/flirma_networks/fl_16s/01.generate_asv_table/runthrough2023")
